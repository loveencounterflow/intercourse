{
  "version": 3,
  "file": "main.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/main.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERCOURSE/TESTS/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\nIC                        = require '../..'\n{ inspect, }              = require 'util'\nxrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\nxrpr2                     = ( x ) -> inspect x, { colors: yes, breakLength: 20, maxArrayLength: Infinity, depth: Infinity, }\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"basic 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"procedure x:\\n  foo bar\",{\"x\":{\"type\":\"procedure\",\"null\":{\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"null\",\"type\":\"procedure\"}}},null]\n    [\"procedure x:\\n  foo bar\\n\",{\"x\":{\"type\":\"procedure\",\"null\":{\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"null\",\"type\":\"procedure\"}}},null]\n    [\"procedure x:\\n  foo bar\\n\\n\",{\"x\":{\"type\":\"procedure\",\"null\":{\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"null\",\"type\":\"procedure\"}}},null]\n    [\"procedure x:\\n  foo bar\\n\\nprocedure y:\\n  foo bar\\n\\n\",{\"x\":{\"type\":\"procedure\",\"null\":{\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"null\",\"type\":\"procedure\"}},\"y\":{\"type\":\"procedure\",\"null\":{\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":4},\"kenning\":\"null\",\"type\":\"procedure\"}}},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      # try\n      result = await IC.definitions_from_text probe\n      # catch error\n      #   return resolve error.message\n      # debug '29929', xrpr2 result\n      resolve result\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"signatures\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"procedure foobar:\\n  some text\",{\"foobar\":{\"type\":\"procedure\",\"null\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"null\",\"type\":\"procedure\"}}},null]\n    [\"procedure foobar():\\n  some text\",{\"foobar\":{\"type\":\"procedure\",\"()\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"()\",\"type\":\"procedure\",\"signature\":[]}}},null]\n    [\"procedure foobar( first ):\\n  some text\",{\"foobar\":{\"type\":\"procedure\",\"(first)\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"(first)\",\"type\":\"procedure\",\"signature\":[\"first\"]}}},null]\n    [\"procedure foobar(first):\\n  some text\",{\"foobar\":{\"type\":\"procedure\",\"(first)\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"(first)\",\"type\":\"procedure\",\"signature\":[\"first\"]}}},null]\n    [\"procedure foobar( first, ):\\n  some text\",{\"foobar\":{\"type\":\"procedure\",\"(first)\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"(first)\",\"type\":\"procedure\",\"signature\":[\"first\"]}}},null]\n    [\"procedure foobar(first,):\\n  some text\",{\"foobar\":{\"type\":\"procedure\",\"(first)\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"(first)\",\"type\":\"procedure\",\"signature\":[\"first\"]}}},null]\n    [\"procedure foobar( first, second ):\\n  some text\",{\"foobar\":{\"type\":\"procedure\",\"(first,second)\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"(first,second)\",\"type\":\"procedure\",\"signature\":[\"first\",\"second\"]}}},null]\n    [\"procedure foobar( first, second, ):\\n  some text\",{\"foobar\":{\"type\":\"procedure\",\"(first,second)\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"(first,second)\",\"type\":\"procedure\",\"signature\":[\"first\",\"second\"]}}},null]\n    [\"procedure foobar( first, second, ): some text\\nprocedure foobar( first ): other text\\nprocedure foobar(): blah\\n\",{\"foobar\":{\"type\":\"procedure\",\"(first,second)\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"(first,second)\",\"type\":\"procedure\",\"signature\":[\"first\",\"second\"]},\"(first)\":{\"text\":\"other text\\n\",\"location\":{\"line_nr\":2},\"kenning\":\"(first)\",\"type\":\"procedure\",\"signature\":[\"first\"]},\"()\":{\"text\":\"blah\\n\",\"location\":{\"line_nr\":3},\"kenning\":\"()\",\"type\":\"procedure\",\"signature\":[]}}},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      # try\n      result = await IC.definitions_from_text probe\n      # catch error\n      #   return resolve error.message\n      # debug '29929', xrpr2 result\n      resolve result\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"oneliners\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    # [\"procedure foobar:  some text\\n  illegal line\",null,'illegal follow-up after one-liner']\n    [\"procedure foobar: some text\",{\"foobar\":{\"type\":\"procedure\",\"null\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"null\",\"type\":\"procedure\"}}},null]\n    [\"procedure foobar(): some text\",{\"foobar\":{\"type\":\"procedure\",\"()\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"()\",\"type\":\"procedure\",\"signature\":[]}}},null]\n    [\"procedure foobar( first ): some text\",{\"foobar\":{\"type\":\"procedure\",\"(first)\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"(first)\",\"type\":\"procedure\",\"signature\":[\"first\"]}}},null]\n    [\"procedure foobar(first): some text\",{\"foobar\":{\"type\":\"procedure\",\"(first)\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"(first)\",\"type\":\"procedure\",\"signature\":[\"first\"]}}},null]\n    [\"procedure foobar( first, ): some text\",{\"foobar\":{\"type\":\"procedure\",\"(first)\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"(first)\",\"type\":\"procedure\",\"signature\":[\"first\"]}}},null]\n    [\"procedure foobar(first,): some text\",{\"foobar\":{\"type\":\"procedure\",\"(first)\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"(first)\",\"type\":\"procedure\",\"signature\":[\"first\"]}}},null]\n    [\"procedure foobar( first, second ): some text\",{\"foobar\":{\"type\":\"procedure\",\"(first,second)\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"(first,second)\",\"type\":\"procedure\",\"signature\":[\"first\",\"second\"]}}},null]\n    [\"procedure foobar( first, second, ): some text\",{\"foobar\":{\"type\":\"procedure\",\"(first,second)\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"kenning\":\"(first,second)\",\"type\":\"procedure\",\"signature\":[\"first\",\"second\"]}}},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      # try\n      result = await IC.definitions_from_text probe\n      # catch error\n      #   return resolve error\n      # debug '29929', xrpr2 result\n      resolve result\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"definitions_from_path_sync\" ] = ( T, done ) ->\n  PATH    = require 'path'\n  FS      = require 'fs'\n  path    = PATH.join __dirname, '../../demos/sqlite-demo.icql'\n  probe   = null\n  matcher = IC.definitions_from_text FS.readFileSync path\n  error   = null\n  #.........................................................................................................\n  await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n    result = IC.definitions_from_path_sync path\n    resolve result\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"definitions_from_path\" ] = ( T, done ) ->\n  PATH    = require 'path'\n  FS      = require 'fs'\n  path    = PATH.join __dirname, '../../demos/sqlite-demo.icql'\n  probe   = null\n  matcher = IC.definitions_from_text FS.readFileSync path\n  error   = null\n  #.........................................................................................................\n  await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n    result = await IC.definitions_from_path path\n    resolve result\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"_parse demo\" ] = ( T, done ) ->\n  PATH      = require 'path'\n  path      = PATH.join __dirname, '../../demos/sqlite-demo.icql'\n  debug xrpr2 await IC.read_definitions path\n  done()\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  test @\n  # test @[ \"definitions_from_path_sync\" ]\n  # test @[ \"definitions_from_path\" ]\n  # test @[ \"basic 1\" ]\n  # test @[ \"signatures\" ]\n  # test @[ \"oneliners\" ]\n  # test @[ \"_parse demo\" ]\n\n\n"
  ]
}