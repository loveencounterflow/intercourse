{
  "version": 3,
  "file": "main.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/main.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERCOURSE/TESTS/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\nIC                        = require '../..'\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"basic 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"procedure x:\\n  foo bar\",{\"x\":{\"arity\":{\"null\":{\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":1}}},\"type\":\"procedure\"}},null]\n    [\"procedure x:\\n  foo bar\\n\",{\"x\":{\"arity\":{\"null\":{\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":1}}},\"type\":\"procedure\"}},null]\n    [\"procedure x:\\n  foo bar\\n\\n\",{\"x\":{\"arity\":{\"null\":{\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":1}}},\"type\":\"procedure\"}},null]\n    [\"procedure x:\\n  foo bar\\n\\nprocedure y:\\n  foo bar\\n\\n\",{\"x\":{\"arity\":{\"null\":{\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":1}}},\"type\":\"procedure\"},\"y\":{\"arity\":{\"null\":{\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":4}}},\"type\":\"procedure\"}},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      # try\n      result = await IC.read_definitions_from_text probe\n      # catch error\n      #   return resolve error.message\n      # debug '29929', result\n      resolve result\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"signatures\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"procedure foobar:\\n  some text\",{\"foobar\":{\"arity\":{\"null\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1}}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar():\\n  some text\",{\"foobar\":{\"arity\":{\"0\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[]}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar( first ):\\n  some text\",{\"foobar\":{\"arity\":{\"1\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar(first):\\n  some text\",{\"foobar\":{\"arity\":{\"1\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar( first, ):\\n  some text\",{\"foobar\":{\"arity\":{\"1\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar(first,):\\n  some text\",{\"foobar\":{\"arity\":{\"1\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar( first, second ):\\n  some text\",{\"foobar\":{\"arity\":{\"2\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\",\"second\"]}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar( first, second, ):\\n  some text\",{\"foobar\":{\"arity\":{\"2\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\",\"second\"]}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar( first, second, ): some text\\nprocedure foobar( first ): other text\\nprocedure foobar(): blah\\n\",{\"foobar\":{\"arity\":{\"0\":{\"text\":\"blah\\n\",\"location\":{\"line_nr\":3},\"signature\":[]},\"1\":{\"text\":\"other text\\n\",\"location\":{\"line_nr\":2},\"signature\":[\"first\"]},\"2\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\",\"second\"]}},\"type\":\"procedure\"}},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      # try\n      result = await IC.read_definitions_from_text probe\n      # catch error\n      #   return resolve error.message\n      # debug '29929', result\n      resolve result\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"oneliners\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    # [\"procedure foobar:  some text\\n  illegal line\",null,'illegal follow-up after one-liner']\n    [\"procedure foobar: some text\",{\"foobar\":{\"arity\":{\"null\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1}}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar(): some text\",{\"foobar\":{\"arity\":{\"0\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[]}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar( first ): some text\",{\"foobar\":{\"arity\":{\"1\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar(first): some text\",{\"foobar\":{\"arity\":{\"1\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar( first, ): some text\",{\"foobar\":{\"arity\":{\"1\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar(first,): some text\",{\"foobar\":{\"arity\":{\"1\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar( first, second ): some text\",{\"foobar\":{\"arity\":{\"2\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\",\"second\"]}},\"type\":\"procedure\"}},null]\n    [\"procedure foobar( first, second, ): some text\",{\"foobar\":{\"arity\":{\"2\":{\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\",\"second\"]}},\"type\":\"procedure\"}},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      # try\n      result = await IC.read_definitions_from_text probe\n      # catch error\n      #   return resolve error\n      # debug '29929', result\n      resolve result\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"_parse demo\" ] = ( T, done ) ->\n  PATH      = require 'path'\n  path      = PATH.join __dirname, '../../demos/sqlite-demo.icql'\n  debug JSON.stringify ( await IC.read_definitions path ), null, '  '\n  done()\n  return null\n\n\n\n\n\n############################################################################################################\nunless module.parent?\n  test @\n  # test @[ \"basic 1\" ]\n  # test @[ \"signatures\" ]\n  # test @[ \"oneliners\" ]\n  # test @[ \"_parse demo\" ]\n\n\n"
  ]
}