{
  "version": 3,
  "file": "main.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/main.test.coffee"
  ],
  "names": [],
  "mappings": ";AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAb5B;;;EAeA,IAAA,GAA4B,OAAA,CAAQ,UAAR;;EAC5B,EAAA,GAA4B,IAAI,CAAC;;EACjC,EAAA,GAA4B,OAAA,CAAQ,OAAR,EAjB5B;;;EAoBA,IAAG,CAAA,SAAA,CAAH,GAAiB,MAAA,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AACf,QAAA,KAAA,EAAA,CAAA,EAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA;IAAA,mBAAA,GAAsB;MACpB;QAAC,yBAAD;QAA2B;UAAC,GAAA,EAAI;YAAC,MAAA,EAAO,GAAR;YAAY,MAAA,EAAO,WAAnB;YAA+B,MAAA,EAAO,WAAtC;YAAkD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX;UAA7D;QAAL,CAA3B;QAA6G,IAA7G;OADoB;MAEpB;QAAC,2BAAD;QAA6B;UAAC,GAAA,EAAI;YAAC,MAAA,EAAO,GAAR;YAAY,MAAA,EAAO,WAAnB;YAA+B,MAAA,EAAO,WAAtC;YAAkD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX;UAA7D;QAAL,CAA7B;QAA+G,IAA/G;OAFoB;MAGpB;QAAC,6BAAD;QAA+B;UAAC,GAAA,EAAI;YAAC,MAAA,EAAO,GAAR;YAAY,MAAA,EAAO,WAAnB;YAA+B,MAAA,EAAO,WAAtC;YAAkD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX;UAA7D;QAAL,CAA/B;QAAiH,IAAjH;OAHoB;MAIpB;QAAC,wDAAD;QAA0D;UAAC,GAAA,EAAI;YAAC,MAAA,EAAO,GAAR;YAAY,MAAA,EAAO,WAAnB;YAA+B,MAAA,EAAO,WAAtC;YAAkD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX;UAA7D,CAAL;UAAiF,GAAA,EAAI;YAAC,MAAA,EAAO,GAAR;YAAY,MAAA,EAAO,WAAnB;YAA+B,MAAA,EAAO,WAAtC;YAAkD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX;UAA7D;QAArF,CAA1D;QAA4N,IAA5N;OAJoB;MAAtB;;IAOA,KAAA,qDAAA;MAAI,CAAE,KAAF,EAAS,OAAT,EAAkB,KAAlB;MACF,MAAM,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,OAAjB,EAA0B,KAA1B,EAAiC,QAAA,CAAA,CAAA;AAAG,eAAO,IAAI,OAAJ,CAAY,MAAA,QAAA,CAAE,OAAF,EAAW,MAAX,CAAA;AAE3D,cAAA,MAAA;;UAAA,MAAA,GAAS,CAAA,MAAM,EAAE,CAAC,0BAAH,CAA8B,KAA9B,CAAN,EAAT;;;;iBAIA,OAAA,CAAQ,MAAR;QAN2D,CAAZ;MAAV,CAAjC;IADR;IAQA,IAAA,CAAA;AACA,WAAO;EAjBQ,EApBjB;;;EAwCA,IAAG,CAAA,YAAA,CAAH,GAAoB,MAAA,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AAClB,QAAA,KAAA,EAAA,CAAA,EAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA;IAAA,mBAAA,GAAsB;MACpB;QAAC,gCAAD;QAAkC;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX;UAApE;QAAV,CAAlC;QAAgI,IAAhI;OADoB;MAEpB;QAAC,kCAAD;QAAoC;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY;UAA9F;QAAV,CAApC;QAAiJ,IAAjJ;OAFoB;MAGpB;QAAC,yCAAD;QAA2C;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY,CAAC,OAAD;UAA9F;QAAV,CAA3C;QAA+J,IAA/J;OAHoB;MAIpB;QAAC,uCAAD;QAAyC;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY,CAAC,OAAD;UAA9F;QAAV,CAAzC;QAA6J,IAA7J;OAJoB;MAKpB;QAAC,0CAAD;QAA4C;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY,CAAC,OAAD;UAA9F;QAAV,CAA5C;QAAgK,IAAhK;OALoB;MAMpB;QAAC,wCAAD;QAA0C;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY,CAAC,OAAD;UAA9F;QAAV,CAA1C;QAA8J,IAA9J;OANoB;MAOpB;QAAC,iDAAD;QAAmD;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY,CAAC,OAAD;QAAS,QAAT;UAA9F;QAAV,CAAnD;QAAgL,IAAhL;OAPoB;MAQpB;QAAC,kDAAD;QAAoD;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY,CAAC,OAAD;QAAS,QAAT;UAA9F;QAAV,CAApD;QAAiL,IAAjL;OARoB;MAAtB;;IAWA,KAAA,qDAAA;MAAI,CAAE,KAAF,EAAS,OAAT,EAAkB,KAAlB;MACF,MAAM,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,OAAjB,EAA0B,KAA1B,EAAiC,QAAA,CAAA,CAAA;AAAG,eAAO,IAAI,OAAJ,CAAY,MAAA,QAAA,CAAE,OAAF,EAAW,MAAX,CAAA;AAE3D,cAAA,MAAA;;UAAA,MAAA,GAAS,CAAA,MAAM,EAAE,CAAC,0BAAH,CAA8B,KAA9B,CAAN,EAAT;;;UAGA,KAAA,CAAM,OAAN,EAAe,MAAf;iBACA,OAAA,CAAQ,MAAR;QAN2D,CAAZ;MAAV,CAAjC;IADR;IAQA,IAAA,CAAA;AACA,WAAO;EArBW,EAxCpB;;;EAgEA,IAAG,CAAA,WAAA,CAAH,GAAmB,MAAA,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AACjB,QAAA,KAAA,EAAA,CAAA,EAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA;IAAA,mBAAA,GAAsB;MAEpB;;QAAC,8BAAD;QAAgC;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX;UAApE;QAAV,CAAhC;QAA8H,IAA9H;OAFoB;MAGpB;QAAC,gCAAD;QAAkC;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY;UAA9F;QAAV,CAAlC;QAA+I,IAA/I;OAHoB;MAIpB;QAAC,uCAAD;QAAyC;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY,CAAC,OAAD;UAA9F;QAAV,CAAzC;QAA6J,IAA7J;OAJoB;MAKpB;QAAC,qCAAD;QAAuC;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY,CAAC,OAAD;UAA9F;QAAV,CAAvC;QAA2J,IAA3J;OALoB;MAMpB;QAAC,wCAAD;QAA0C;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY,CAAC,OAAD;UAA9F;QAAV,CAA1C;QAA8J,IAA9J;OANoB;MAOpB;QAAC,sCAAD;QAAwC;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY,CAAC,OAAD;UAA9F;QAAV,CAAxC;QAA4J,IAA5J;OAPoB;MAQpB;QAAC,+CAAD;QAAiD;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY,CAAC,OAAD;QAAS,QAAT;UAA9F;QAAV,CAAjD;QAA8K,IAA9K;OARoB;MASpB;QAAC,gDAAD;QAAkD;UAAC,QAAA,EAAS;YAAC,MAAA,EAAO,QAAR;YAAiB,MAAA,EAAO,WAAxB;YAAoC,MAAA,EAAO,aAA3C;YAAyD,UAAA,EAAW;cAAC,SAAA,EAAU;YAAX,CAApE;YAAkF,WAAA,EAAY,CAAC,OAAD;QAAS,QAAT;UAA9F;QAAV,CAAlD;QAA+K,IAA/K;OAToB;MAAtB;;IAYA,KAAA,qDAAA;MAAI,CAAE,KAAF,EAAS,OAAT,EAAkB,KAAlB;MACF,MAAM,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,OAAjB,EAA0B,KAA1B,EAAiC,QAAA,CAAA,CAAA;AAAG,eAAO,IAAI,OAAJ,CAAY,MAAA,QAAA,CAAE,OAAF,EAAW,MAAX,CAAA;AAE3D,cAAA,MAAA;;UAAA,MAAA,GAAS,CAAA,MAAM,EAAE,CAAC,0BAAH,CAA8B,KAA9B,CAAN,EAAT;;;;iBAIA,OAAA,CAAQ,MAAR;QAN2D,CAAZ;MAAV,CAAjC;IADR;IAQA,IAAA,CAAA;AACA,WAAO;EAtBU,EAhEnB;;;EA6FA,IAAO,qBAAP;IACE,IAAA,CAAK,IAAL,EADF;;;EA7FA;;AAAA",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERCOURSE/TESTS/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\nIC                        = require '../..'\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"basic 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"procedure x:\\n  foo bar\",{\"x\":{\"name\":\"x\",\"type\":\"procedure\",\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":1}}},null]\n    [\"procedure x:\\n  foo bar\\n\",{\"x\":{\"name\":\"x\",\"type\":\"procedure\",\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":1}}},null]\n    [\"procedure x:\\n  foo bar\\n\\n\",{\"x\":{\"name\":\"x\",\"type\":\"procedure\",\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":1}}},null]\n    [\"procedure x:\\n  foo bar\\n\\nprocedure y:\\n  foo bar\\n\\n\",{\"x\":{\"name\":\"x\",\"type\":\"procedure\",\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":1}},\"y\":{\"name\":\"y\",\"type\":\"procedure\",\"text\":\"foo bar\\n\",\"location\":{\"line_nr\":4}}},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      # try\n      result = await IC.read_definitions_from_text probe\n      # catch error\n      #   return resolve error.message\n      # debug '29929', result\n      resolve result\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"signatures\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"procedure foobar:\\n  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1}}},null]\n    [\"procedure foobar():\\n  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[]}},null]\n    [\"procedure foobar( first ):\\n  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},null]\n    [\"procedure foobar(first):\\n  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},null]\n    [\"procedure foobar( first, ):\\n  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},null]\n    [\"procedure foobar(first,):\\n  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},null]\n    [\"procedure foobar( first, second ):\\n  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\",\"second\"]}},null]\n    [\"procedure foobar( first, second, ):\\n  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\",\"second\"]}},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      # try\n      result = await IC.read_definitions_from_text probe\n      # catch error\n      #   return resolve error.message\n      debug '29929', result\n      resolve result\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"oneliners\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    # [\"procedure foobar:  some text\\n  illegal line\",null,'illegal follow-up after one-liner']\n    [\"procedure foobar:  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1}}},null]\n    [\"procedure foobar():  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[]}},null]\n    [\"procedure foobar( first ):  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},null]\n    [\"procedure foobar(first):  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},null]\n    [\"procedure foobar( first, ):  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},null]\n    [\"procedure foobar(first,):  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\"]}},null]\n    [\"procedure foobar( first, second ):  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\",\"second\"]}},null]\n    [\"procedure foobar( first, second, ):  some text\",{\"foobar\":{\"name\":\"foobar\",\"type\":\"procedure\",\"text\":\"some text\\n\",\"location\":{\"line_nr\":1},\"signature\":[\"first\",\"second\"]}},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      # try\n      result = await IC.read_definitions_from_text probe\n      # catch error\n      #   return resolve error\n      # debug '29929', result\n      resolve result\n  done()\n  return null\n\n\n\n\n\n############################################################################################################\nunless module.parent?\n  test @\n  # test @[ \"signatures\" ]\n  # test @[ \"oneliners\" ]\n\n\n"
  ]
}